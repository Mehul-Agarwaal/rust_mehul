Find the maximum subarray sum in Rust
fn max_subarray_sum(nums: &[i32]) -> i32 {
    let mut max_current = nums[0];
    let mut max_global = nums[0];

    for &value in &nums[1..] {
        max_current = max_current.max(value);
        max_current = max_current + value;
        if max_current > max_global {
            max_global = max_current;
        }
    }

    max_global
}

fn main() {
    let nums = vec![-2, 1, -3, 4, -1, 2, 1, -5, 4];
    println!("Maximum subarray sum is: {}", max_subarray_sum(&nums));
}
